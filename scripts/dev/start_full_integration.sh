#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Foodgram..."

# Stop any running services
echo "1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.dev.yml down
cd infra && docker-compose down
cd ..

# Start infrastructure
echo "2. –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (PostgreSQL, Redis, MinIO)..."
docker-compose -f docker-compose.dev.yml up -d

# Wait for services to be ready
echo "3. –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# Start backend
echo "4. –ó–∞–ø—É—Å–∫ Backend..."
cd backend
source venv/Scripts/activate
pip install -r requirements/development.txt
python manage.py migrate --settings=foodgram.settings.development
python manage.py collectstatic --noinput --settings=foodgram.settings.development
python manage.py runserver --settings=foodgram.settings.development &
BACKEND_PID=$!
cd ..

# Start frontend
echo "5. –ó–∞–ø—É—Å–∫ Frontend..."
cd frontend
npm install
npm start &
FRONTEND_PID=$!
cd ..

# Start nginx with full stack
echo "6. –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Å—Ç–µ–∫–∞ —á–µ—Ä–µ–∑ docker-compose..."
cd infra
docker-compose up -d
cd ..

echo "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!"
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "- Backend API: http://localhost:8000"
echo "- Frontend Dev: http://localhost:3000"
echo "- Full Stack: http://localhost (—á–µ—Ä–µ–∑ nginx)"
echo "- MinIO Console: http://localhost:9001"
echo "- Admin: http://localhost:8000/admin/"

echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C"

# Keep script running
wait $BACKEND_PID $FRONTEND_PID 