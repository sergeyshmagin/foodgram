#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./load_production_data.sh [basic|demo|full]

set -e

LOAD_TYPE=${1:-basic}
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(cd "$SCRIPT_DIR/../.." && pwd)"

echo "üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ–¥–∞–∫—à–Ω (—Ç–∏–ø: $LOAD_TYPE)"
echo "üìÅ –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"

cd "$PROJECT_DIR"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ
if [ ! -f "infra/docker-compose.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if ! sudo docker compose -f infra/docker-compose.yml ps | grep -q "foodgram-backend.*Up"; then
    echo "‚ùå –û—à–∏–±–∫–∞: backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∫–æ–º–∞–Ω–¥–æ–π: sudo docker compose -f infra/docker-compose.yml up -d"
    exit 1
fi

echo "‚úÖ Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ Django
run_django_command() {
    local cmd="$1"
    local description="$2"
    
    echo ""
    echo "üîÑ $description..."
    
    if sudo docker compose -f infra/docker-compose.yml exec -T backend python manage.py $cmd; then
        echo "‚úÖ $description –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: $description"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ
check_data_status() {
    echo ""
    echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admin_count=$(sudo docker compose -f infra/docker-compose.yml exec -T backend python manage.py shell -c "
from django.contrib.auth import get_user_model
User = get_user_model()
print(User.objects.filter(is_superuser=True).count())
" 2>/dev/null | tail -1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–≥–∏
    tags_count=$(sudo docker compose -f infra/docker-compose.yml exec -T backend python manage.py shell -c "
from apps.recipes.models import Tag
print(Tag.objects.count())
" 2>/dev/null | tail -1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    ingredients_count=$(sudo docker compose -f infra/docker-compose.yml exec -T backend python manage.py shell -c "
from apps.recipes.models import Ingredient
print(Ingredient.objects.count())
" 2>/dev/null | tail -1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
    recipes_count=$(sudo docker compose -f infra/docker-compose.yml exec -T backend python manage.py shell -c "
from apps.recipes.models import Recipe
print(Recipe.objects.count())
" 2>/dev/null | tail -1)
    
    echo "üìà –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
    echo "   üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: $admin_count"
    echo "   üè∑Ô∏è  –¢–µ–≥–∏: $tags_count"
    echo "   ü•ï –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: $ingredients_count"
    echo "   üìÑ –†–µ—Ü–µ–ø—Ç—ã: $recipes_count"
}

echo ""
echo "üîß –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
check_data_status

if [ "$LOAD_TYPE" = "basic" ] || [ "$LOAD_TYPE" = "full" ]; then
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ —Ç–µ–≥–∏)
    if ! run_django_command "setup_production" "–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ —Ç–µ–≥–∏)"; then
        echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    if [ -f "data/ingredients.csv" ]; then
        if ! run_django_command "load_ingredients --file data/ingredients.csv" "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏–∑ CSV —Ñ–∞–π–ª–∞"; then
            echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
        fi
    else
        echo "‚ö†Ô∏è –§–∞–π–ª data/ingredients.csv –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤"
    fi
fi

if [ "$LOAD_TYPE" = "demo" ] || [ "$LOAD_TYPE" = "full" ]; then
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
    if ! run_django_command "load_demo_data" "–ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö (—Ä–µ—Ü–µ–ø—Ç—ã)"; then
        echo "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ load_demo_data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    fi
fi

echo ""
echo "üîÑ –°–æ–∑–¥–∞—ë–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏..."
if ! run_django_command "makemigrations --dry-run" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"; then
    echo "‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
fi

# –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è - —Å–æ–∑–¥–∞—ë–º –º–∏–≥—Ä–∞—Ü–∏–∏
if sudo docker compose -f infra/docker-compose.yml exec -T backend python manage.py makemigrations --dry-run | grep -q "would create"; then
    echo "üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–æ–¥–µ–ª—è—Ö, —Å–æ–∑–¥–∞—ë–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
    if ! run_django_command "makemigrations" "–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"; then
        echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –º–∏–≥—Ä–∞—Ü–∏–π"
    fi
fi

echo ""
echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
if ! run_django_command "migrate" "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"; then
    echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏"
fi

echo ""
echo "üßπ –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
if ! run_django_command "collectstatic --noinput" "–°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤"; then
    echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å–æ —Å–±–æ—Ä–æ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤"
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
check_data_status

echo ""
echo "‚úÖ –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "üìã –ê–ö–ö–ê–£–ù–¢–´ –î–õ–Ø –í–•–û–î–ê:"
echo "üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@foodgram.local / admin123"
echo ""
echo "üåê Admin –ø–∞–Ω–µ–ª—å: https://foodgram.freedynamicdns.net/admin/"
echo "üåê –°–∞–π—Ç: https://foodgram.freedynamicdns.net/"
echo ""
echo "üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∞–¥–º–∏–Ω–∫–µ:"
echo "   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫—É –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ"
echo "   - –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å—å—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–¥–µ–ª—ã '–¢–µ–≥–∏' –∏ '–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'"
echo ""
echo "üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å Postman –∫–æ–ª–ª–µ–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API!" 