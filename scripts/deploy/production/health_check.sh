#!/bin/bash

# ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Foodgram –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./health_check.sh

echo "ü©∫ === –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø FOODGRAM ==="
echo "–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: $(date)"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å —Ü–≤–µ—Ç–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
check_status() {
    local service=$1
    local command=$2
    local expected=$3
    
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ $service: "
    
    if eval "$command" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ OK${NC}"
        return 0
    else
        echo -e "${RED}‚ùå FAIL${NC}"
        return 1
    fi
}

# –°—á–µ—Ç—á–∏–∫–∏
total_checks=0
passed_checks=0

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üì¶ –ö–û–ù–¢–ï–ô–ù–ï–†–´:"
containers=("foodgram-backend" "foodgram-frontend" "foodgram-nginx" "foodgram-postgres" "foodgram-redis" "foodgram-minio")

for container in "${containers[@]}"; do
    total_checks=$((total_checks + 1))
    if check_status "$container" "docker ps | grep $container | grep -q Up"; then
        passed_checks=$((passed_checks + 1))
    fi
done

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo ""
echo "üåê –°–ï–¢–ï–í–´–ï –°–ï–†–í–ò–°–´:"
ports=("80:HTTP" "9000:MinIO" "6379:Redis" "5432:PostgreSQL")

for port_service in "${ports[@]}"; do
    port=$(echo $port_service | cut -d: -f1)
    service=$(echo $port_service | cut -d: -f2)
    total_checks=$((total_checks + 1))
    if check_status "$service (–ø–æ—Ä—Ç $port)" "netstat -tlnp | grep -q :$port"; then
        passed_checks=$((passed_checks + 1))
    fi
done

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP endpoints
echo ""
echo "üîó HTTP ENDPOINTS:"
endpoints=(
    "http://localhost/:–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    "http://localhost/api/:API Root"
    "http://localhost/admin/:–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
)

for endpoint_desc in "${endpoints[@]}"; do
    endpoint=$(echo $endpoint_desc | cut -d: -f1)
    desc=$(echo $endpoint_desc | cut -d: -f2)
    total_checks=$((total_checks + 1))
    if check_status "$desc" "curl -f -s $endpoint"; then
        passed_checks=$((passed_checks + 1))
    fi
done

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo ""
echo "üóÉÔ∏è –ë–ê–ó–ê –î–ê–ù–ù–´–•:"
total_checks=$((total_checks + 1))
if check_status "PostgreSQL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ" "docker exec foodgram-backend python manage.py check --database default"; then
    passed_checks=$((passed_checks + 1))
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
echo ""
echo "üìÅ –§–ê–ô–õ–û–í–û–ï –•–†–ê–ù–ò–õ–ò–©–ï:"
total_checks=$((total_checks + 1))
if check_status "MinIO –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å" "curl -f -s http://localhost:9000/minio/health/live"; then
    passed_checks=$((passed_checks + 1))
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞
echo ""
echo "‚ö° –ö–ï–®:"
total_checks=$((total_checks + 1))
if check_status "Redis –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å" "docker exec foodgram-redis redis-cli ping | grep -q PONG"; then
    passed_checks=$((passed_checks + 1))
fi

# 7. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
echo ""
echo "üìä –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:"

echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞:"
df -h | grep -E "Filesystem|/dev/"

echo ""
echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
free -h

echo ""
echo "–õ–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—à–∏–±–æ–∫ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
docker compose -f infra/docker-compose.yml logs --tail=10 2>/dev/null | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo ""
echo "üìã === –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò ==="
echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $total_checks"
echo "–£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: $passed_checks"
echo "–ù–µ—É–¥–∞—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: $((total_checks - passed_checks))"

success_rate=$((passed_checks * 100 / total_checks))

if [ $success_rate -eq 100 ]; then
    echo -e "${GREEN}üéâ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ! ($success_rate%)${NC}"
elif [ $success_rate -ge 80 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ ($success_rate%)${NC}"
else
    echo -e "${RED}üö® –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å–µ—Ä—å–µ–∑–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ ($success_rate%)${NC}"
    echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
fi

echo "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)" 