#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Postman.
"""

import os
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'foodgram.settings.production')

import django
django.setup()

from django.db import models
from django.contrib.auth import get_user_model
from apps.recipes.models import Recipe, Favorite, ShoppingCart, Subscription

User = get_user_model()

def clear_postman_test_users():
    """–£–¥–∞–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Postman."""
    print("üßπ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Postman...")
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    test_users_data = [
        {'email': 'vivanov@yandex.ru', 'username': 'vasya.ivanov'},
        {'email': 'second_user@email.org', 'username': 'second-user'},
        {'email': 'third-user@user.ru', 'username': 'third-user-username'},
    ]
    
    deleted_count = 0
    
    for user_data in test_users_data:
        email = user_data['email']
        username = user_data['username']
        
        print(f"\nüîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {email} / {username}")
        
        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ email –∏–ª–∏ username
        users_to_delete = User.objects.filter(
            models.Q(email__iexact=email) | models.Q(username__iexact=username)
        )
        
        for user in users_to_delete:
            print(f"  –ù–∞–π–¥–µ–Ω: {user.email} / {user.username} (ID: {user.id})")
            
            # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            recipes_count = Recipe.objects.filter(author=user).count()
            favorites_count = Favorite.objects.filter(user=user).count()
            cart_count = ShoppingCart.objects.filter(user=user).count()
            subscriptions_count = Subscription.objects.filter(
                models.Q(user=user) | models.Q(author=user)
            ).count()
            
            if recipes_count > 0:
                Recipe.objects.filter(author=user).delete()
                print(f"    ‚Ü≥ –£–¥–∞–ª–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: {recipes_count}")
            
            if favorites_count > 0:
                Favorite.objects.filter(user=user).delete()
                print(f"    ‚Ü≥ –£–¥–∞–ª–µ–Ω–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {favorites_count}")
            
            if cart_count > 0:
                ShoppingCart.objects.filter(user=user).delete()
                print(f"    ‚Ü≥ –£–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã: {cart_count}")
            
            if subscriptions_count > 0:
                Subscription.objects.filter(
                    models.Q(user=user) | models.Q(author=user)
                ).delete()
                print(f"    ‚Ü≥ –£–¥–∞–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫: {subscriptions_count}")
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.delete()
            print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} —É–¥–∞–ª–µ–Ω")
            deleted_count += 1
    
    print(f"\nüéØ –ò—Ç–æ–≥–æ —É–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {deleted_count}")
    return deleted_count

def check_current_state():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö."""
    print("\nüìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    
    total_users = User.objects.count()
    total_recipes = Recipe.objects.count()
    total_favorites = Favorite.objects.count()
    total_cart = ShoppingCart.objects.count()
    total_subscriptions = Subscription.objects.count()
    
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
    print(f"–†–µ—Ü–µ–ø—Ç–æ–≤: {total_recipes}")
    print(f"–ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {total_favorites}")
    print(f"–í –∫–æ—Ä–∑–∏–Ω–µ: {total_cart}")
    print(f"–ü–æ–¥–ø–∏—Å–æ–∫: {total_subscriptions}")

def verify_test_users_removed():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã."""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    test_emails = [
        'vivanov@yandex.ru',
        'second_user@email.org', 
        'third-user@user.ru'
    ]
    
    test_usernames = [
        'vasya.ivanov',
        'second-user',
        'third-user-username'
    ]
    
    remaining_users = User.objects.filter(
        models.Q(email__in=test_emails) | models.Q(username__in=test_usernames)
    )
    
    if remaining_users.exists():
        print("‚ùå –û—Å—Ç–∞–ª–∏—Å—å —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        for user in remaining_users:
            print(f"  - {user.email} / {user.username}")
        return False
    else:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã!")
        return True

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Postman...")
    
    try:        
        print("üìã –°–æ—Å—Ç–æ—è–Ω–∏–µ –î–û –æ—á–∏—Å—Ç–∫–∏:")
        check_current_state()
        
        deleted_count = clear_postman_test_users()
        
        print("\nüìã –°–æ—Å—Ç–æ—è–Ω–∏–µ –ü–û–°–õ–ï –æ—á–∏—Å—Ç–∫–∏:")
        check_current_state()
        
        if verify_test_users_removed():
            print("\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("üöÄ –¢–µ–ø–µ—Ä—å Postman —Ç–µ—Å—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç—å!")
        else:
            print("\n‚ùå –ù–µ –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        import traceback
        traceback.print_exc() 