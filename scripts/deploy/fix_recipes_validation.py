#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤.
"""

import os
import sys
import django
from django.db import transaction

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'foodgram.settings.production')
django.setup()

from django.db import models
from apps.recipes.models import Recipe, Tag, IngredientInRecipe


def fix_recipes_without_tags():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ—Ü–µ–ø—Ç—ã –±–µ–∑ —Ç–µ–≥–æ–≤."""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–µ–∑ —Ç–µ–≥–æ–≤...")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ä–µ—Ü–µ–ø—Ç—ã –±–µ–∑ —Ç–µ–≥–æ–≤
    recipes_without_tags = Recipe.objects.filter(tags__isnull=True).distinct()
    
    if recipes_without_tags.exists():
        print(f"–ù–∞–π–¥–µ–Ω–æ {recipes_without_tags.count()} —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–µ–∑ —Ç–µ–≥–æ–≤:")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ç–µ–≥ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
        default_tag = Tag.objects.first()
        if not default_tag:
            default_tag = Tag.objects.create(
                name="–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
                slug="no-category"
            )
            print(f"–°–æ–∑–¥–∞–Ω –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–µ–≥: {default_tag.name}")
        
        for recipe in recipes_without_tags:
            print(f"  - {recipe.name} (ID: {recipe.id})")
            recipe.tags.add(default_tag)
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ–≥ '{default_tag.name}' –∫ {recipes_without_tags.count()} —Ä–µ—Ü–µ–ø—Ç–∞–º")
    else:
        print("‚úÖ –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏–º–µ—é—Ç —Ç–µ–≥–∏")


def fix_recipes_without_ingredients():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ—Ü–µ–ø—Ç—ã –±–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤."""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤...")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ä–µ—Ü–µ–ø—Ç—ã –±–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    recipes_with_ingredients = IngredientInRecipe.objects.values_list('recipe_id', flat=True)
    recipes_without_ingredients = Recipe.objects.exclude(id__in=recipes_with_ingredients)
    
    if recipes_without_ingredients.exists():
        print(f"–ù–∞–π–¥–µ–Ω–æ {recipes_without_ingredients.count()} —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:")
        for recipe in recipes_without_ingredients:
            print(f"  - {recipe.name} (ID: {recipe.id})")
        
        # –≠—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –±–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –æ–Ω–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
        count = recipes_without_ingredients.count()
        recipes_without_ingredients.delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
    else:
        print("‚úÖ –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏–º–µ—é—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã")


def fix_recipes_with_empty_fields():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ—Ü–µ–ø—Ç—ã —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏."""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏...")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ä–µ—Ü–µ–ø—Ç—ã —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏
    recipes_with_empty_fields = Recipe.objects.filter(
        models.Q(name='') |
        models.Q(text='') |
        models.Q(cooking_time__lte=0)
    )
    
    if recipes_with_empty_fields.exists():
        print(f"–ù–∞–π–¥–µ–Ω–æ {recipes_with_empty_fields.count()} —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏:")
        
        for recipe in recipes_with_empty_fields:
            print(f"  - {recipe.name or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} (ID: {recipe.id})")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ –ø–æ–ª—è
            if not recipe.name:
                recipe.name = f"–†–µ—Ü–µ–ø—Ç #{recipe.id}"
            if not recipe.text:
                recipe.text = "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–æ."
            if recipe.cooking_time <= 0:
                recipe.cooking_time = 30  # –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –≤—Ä–µ–º—è 30 –º–∏–Ω—É—Ç
            
            recipe.save()
        
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {recipes_with_empty_fields.count()} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
    else:
        print("‚úÖ –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–æ–ª—è")


def validate_all_recipes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å."""
    print("\nüìã –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤...")
    
    total_recipes = Recipe.objects.count()
    valid_recipes = 0
    invalid_recipes = []
    
    for recipe in Recipe.objects.all():
        is_valid = True
        errors = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        if not recipe.name:
            is_valid = False
            errors.append("–ø—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
        
        if not recipe.text:
            is_valid = False
            errors.append("–ø—É—Å—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
        
        if recipe.cooking_time <= 0:
            is_valid = False
            errors.append("–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–≥–∏
        if not recipe.tags.exists():
            is_valid = False
            errors.append("–Ω–µ—Ç —Ç–µ–≥–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        if not recipe.recipe_ingredients.exists():
            is_valid = False
            errors.append("–Ω–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
        
        if is_valid:
            valid_recipes += 1
        else:
            invalid_recipes.append((recipe, errors))
    
    print(f"‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤: {valid_recipes}/{total_recipes}")
    
    if invalid_recipes:
        print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤: {len(invalid_recipes)}")
        for recipe, errors in invalid_recipes:
            print(f"  - {recipe.name} (ID: {recipe.id}): {', '.join(errors)}")
    
    return len(invalid_recipes) == 0


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤...")
    
    try:
        fix_recipes_with_empty_fields()
        fix_recipes_without_tags()
        fix_recipes_without_ingredients()
        
        if validate_all_recipes():
            print("\n‚úÖ –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")
        else:
            print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤—Å—ë –µ—â—ë —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è")
        
        print("\nüéØ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤: {e}")
        sys.exit(1)


if __name__ == '__main__':
    main() 