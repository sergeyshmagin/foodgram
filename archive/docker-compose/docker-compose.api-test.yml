version: '3.8'

services:
  # PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  db:
    container_name: foodgram-api-test-db
    image: postgres:13.10
    environment:
      POSTGRES_DB: foodgram_test
      POSTGRES_USER: foodgram_user
      POSTGRES_PASSWORD: foodgram_password
    volumes:
      - pg_data_api_test:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foodgram_user -d foodgram_test"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Redis –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
  redis:
    container_name: foodgram-api-test-redis
    image: redis:7.0-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data_api_test:/data
    ports:
      - "6380:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  # MinIO –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
  minio:
    container_name: foodgram-api-test-minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: foodgram_minio
      MINIO_ROOT_PASSWORD: foodgram_minio_password
    ports:
      - "9002:9000"
      - "9003:9001"
    volumes:
      - minio_data_api_test:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Backend Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  backend:
    container_name: foodgram-api-test-backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=foodgram.settings.development
      - SECRET_KEY=test-secret-key-for-postman-api-testing-only
      
      # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=foodgram_test
      - DB_USER=foodgram_user
      - DB_PASSWORD=foodgram_password
      - DB_HOST=db
      - DB_PORT=5432
      
      # Redis
      - REDIS_URL=redis://redis:6379/0
      
      # MinIO
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=foodgram_minio
      - MINIO_SECRET_KEY=foodgram_minio_password
      - MINIO_BUCKET_NAME=foodgram-media
      - MINIO_USE_HTTPS=False
      
      # CORS –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      - CORS_ALLOWED_ORIGINS=*
      - ALLOWED_HOSTS=*
      
      # Email (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤)
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
      
    ports:
      - "8000:8000"
    volumes:
      - backend_media_api_test:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 10s
      timeout: 5s
      retries: 20
    command: >
      sh -c "
        echo 'üöÄ –ó–∞–ø—É—Å–∫ Foodgram API –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Postman –∫–æ–ª–ª–µ–∫—Ü–∏–∏...' &&
        echo '‚è≥ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...' &&
        python manage.py migrate &&
        echo 'üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...' &&
        python manage.py loaddata fixtures/tags.json 2>/dev/null || echo 'Tags: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ' &&
        python manage.py loaddata fixtures/ingredients.json 2>/dev/null || echo 'Ingredients: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ' &&
        python manage.py create_test_data 2>/dev/null || echo 'Test data: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ' &&
        echo 'üìä –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...' &&
        python manage.py collectstatic --noinput &&
        echo '‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...' &&
        echo 'üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000' &&
        echo 'üìã Health check: http://localhost:8000/api/health/' &&
        python manage.py runserver 0.0.0.0:8000
      "

volumes:
  pg_data_api_test:
  redis_data_api_test:
  minio_data_api_test:
  backend_media_api_test: 