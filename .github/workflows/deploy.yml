name: Deploy Foodgram to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROD_HOST: 89.169.174.76
  DOMAIN: foodgram.freedynamicdns.net

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements/development.txt
        
    - name: Run tests
      run: |
        cd backend
        python -m pytest --tb=short -v
        
    - name: Check code style
      run: |
        cd backend
        flake8 .

  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs: tests
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ env.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        debug: true
        script: |
          set -e
          
          echo "=== –ù–ê–ß–ê–õ–û –î–ï–ü–õ–û–Ø ==="
          echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
          echo "–î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $HOME"
          echo "–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
          
          echo "–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é..."
          mkdir -p $HOME/foodgram
          cd $HOME/foodgram
          
          echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞..."
          if [ -d ".git" ]; then
            echo "–û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
            git fetch origin
            git reset --hard origin/main
          else
            echo "–ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
            # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø
            git clone https://github.com/${{ github.repository }}.git . || {
              echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ HTTPS, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±..."
              # –û—á–∏—â–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
              rm -rf .git
              # –ò—Å–ø–æ–ª—å–∑—É–µ–º wget –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä—Ö–∏–≤–∞
              wget -O repo.zip https://github.com/${{ github.repository }}/archive/refs/heads/main.zip
              unzip -o repo.zip
              mv *-main/* .
              mv *-main/.* . 2>/dev/null || true
              rm -rf *-main repo.zip
              echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ –∞—Ä—Ö–∏–≤"
            }
          fi
          
          echo "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
          mkdir -p infra
          cat > infra/.env << EOF
          # Django settings
          DEBUG=False
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DJANGO_SETTINGS_MODULE=foodgram.settings.production
          ALLOWED_HOSTS=${{ env.DOMAIN }},${{ env.PROD_HOST }},localhost,127.0.0.1
          
          # Database
          POSTGRES_DB=foodgram
          POSTGRES_USER=foodgram_user
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST=db
          DB_PORT=5432
          
          # Redis
          REDIS_HOST=redis
          REDIS_PORT=6379
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          
          # MinIO
          MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}
          MINIO_BUCKET_NAME=foodgram
          MINIO_USE_HTTPS=False
          MINIO_HOST=minio
          
          # Email
          EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
          DEFAULT_FROM_EMAIL=noreply@${{ env.DOMAIN }}
          
          # Domain
          DOMAIN_NAME=${{ env.DOMAIN }}
          EOF
          
          echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ Docker..."
          sudo usermod -aG docker $USER || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É docker"
          sudo systemctl restart docker || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Docker"
          
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
          docker --version || echo "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
          docker compose version || docker-compose --version || echo "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
          
          echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          sudo docker compose -f infra/docker-compose.yml down --remove-orphans || echo "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
          
          echo "üîß –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–û–î–ì–û–¢–û–í–ö–ê –ü–û–†–¢–ê 80..."
          # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 80 –î–û –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –ø–æ—Ä—Ç 80..."
          sudo netstat -tlnp | grep :80 || echo "–ü–æ—Ä—Ç 80 —Å–≤–æ–±–æ–¥–µ–Ω"
          
          echo "–û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 80..."
          sudo systemctl stop nginx 2>/dev/null || echo "–°–∏—Å—Ç–µ–º–Ω—ã–π nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω"
          sudo systemctl disable nginx 2>/dev/null || echo "–°–∏—Å—Ç–µ–º–Ω—ã–π nginx —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω"
          sudo fuser -k 80/tcp 2>/dev/null || echo "–ù–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É 80"
          sudo pkill nginx 2>/dev/null || echo "–ù–µ—Ç nginx –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
          sudo pkill apache2 2>/dev/null || echo "–ù–µ—Ç apache –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
          
          # –ñ–¥—ë–º –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞
          sleep 3
          
          # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
          if sudo netstat -tlnp | grep :80; then
            echo "‚ö†Ô∏è –ü–æ—Ä—Ç 80 –≤—Å—ë –µ—â—ë –∑–∞–Ω—è—Ç:"
            sudo netstat -tlnp | grep :80
            echo "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 80..."
            sudo lsof -ti:80 | xargs sudo kill -9 2>/dev/null || echo "–ù–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
            sleep 2
          else
            echo "‚úÖ –ü–æ—Ä—Ç 80 –æ—Å–≤–æ–±–æ–∂–¥—ë–Ω"
          fi
          
          echo "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          sudo docker compose -f infra/docker-compose.yml up -d --build
          
          echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          sleep 30
          
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          if ! sudo docker compose -f infra/docker-compose.yml ps | grep "foodgram-nginx" | grep -q "Up"; then
            echo "‚ö†Ô∏è  Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –ø–æ—Ä—Ç–æ–º 80..."
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –ø–æ—Ä—Ç 80
            echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ—Ä—Ç 80..."
            sudo netstat -tlnp | grep :80 || echo "–ù–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É 80"
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π nginx –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
            echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π nginx..."
            sudo systemctl stop nginx 2>/dev/null || echo "–°–∏—Å—Ç–µ–º–Ω—ã–π nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            sudo systemctl disable nginx 2>/dev/null || echo "–°–∏—Å—Ç–µ–º–Ω—ã–π nginx —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω"
            
            # –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 80
            echo "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 80..."
            sudo fuser -k 80/tcp 2>/dev/null || echo "–ù–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞ –ø–æ—Ä—Ç—É 80"
            sudo pkill nginx 2>/dev/null || echo "–ù–µ—Ç nginx –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
            
            # –ñ–¥—ë–º –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞
            sleep 5
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞
            if sudo netstat -tlnp | grep :80; then
              echo "–ü–æ—Ä—Ç 80 –≤—Å—ë –µ—â—ë –∑–∞–Ω—è—Ç. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
              sudo pkill apache2 2>/dev/null || echo "–ù–µ—Ç apache –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
              sleep 3
            fi
            
            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            echo "–ó–∞–ø—É—Å–∫–∞–µ–º nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
            sudo docker compose -f infra/docker-compose.yml up -d nginx
            
            sleep 10
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if sudo docker compose -f infra/docker-compose.yml ps | grep nginx | grep -q "Up"; then
              echo "‚úÖ Nginx —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
            else
              echo "‚ùå Nginx –≤—Å—ë –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏:"
              sudo docker compose -f infra/docker-compose.yml logs nginx
            fi
          else
            echo "‚úÖ Nginx —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
          fi
          
          sudo docker compose -f infra/docker-compose.yml ps
          
          echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
          echo "üåê –°–∞–π—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://${{ env.PROD_HOST }}" 