"""Management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ–¥–∞–∫—à–Ω."""
from django.contrib.auth import get_user_model
from django.core.management.base import BaseCommand
from django.db import transaction

from apps.recipes.models import Tag

User = get_user_model()


class Command(BaseCommand):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ–¥–∞–∫—à–Ω."""

    help = "–°–æ–∑–¥–∞—ë—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –±–∞–∑–æ–≤—ã–µ —Ç–µ–≥–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞"

    def handle(self, *args, **options):
        """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã."""
        self.stdout.write(
            self.style.SUCCESS("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞")
        )

        with transaction.atomic():
            self._create_admin()
            self._create_tags()

        self.stdout.write(
            self.style.SUCCESS("‚úÖ –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
        )

    def _create_admin(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
        self.stdout.write("üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")

        admin, created = User.objects.get_or_create(
            email="admin@foodgram.local",
            defaults={
                "username": "admin",
                "first_name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                "last_name": "Foodgram",
                "is_staff": True,
                "is_superuser": True,
            },
        )

        # –í—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        admin.set_password("admin123")
        admin.is_staff = True
        admin.is_superuser = True
        admin.save()

        if created:
            self.stdout.write("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
        else:
            self.stdout.write("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª—ë–Ω")

    def _create_tags(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ç–µ–≥–æ–≤."""
        self.stdout.write("üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–æ–≤...")

        tags_data = [
            {"name": "–ó–∞–≤—Ç—Ä–∞–∫", "color": "#E26C2D", "slug": "zavtrak"},
            {"name": "–û–±–µ–¥", "color": "#49B64E", "slug": "obed"},
            {"name": "–£–∂–∏–Ω", "color": "#8775D2", "slug": "uzhin"},
            {"name": "–î–µ—Å–µ—Ä—Ç", "color": "#F46EBD", "slug": "desert"},
        ]

        for tag_data in tags_data:
            tag, created = Tag.objects.get_or_create(
                slug=tag_data["slug"], defaults=tag_data
            )
            if created:
                self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ–≥: {tag_data['name']}")
            else:
                self.stdout.write(f"‚ÑπÔ∏è –¢–µ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {tag_data['name']}") 